#cloud-config
users:
  - name: player1
    groups: sudo,docker
    shell: /usr/bin/zsh
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    ssh-authorized-keys:
      - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFtQcMtGB55jBNuxxvlKXfeYLhy0wsPtIVt2KorpgXhQ budchris@alpha"
      - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFm804g6IUQO1ELH716hLjTBj3zzzbuOUbL3jCE7Gej8 budchris@bravo"
      - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINNTDemhkFYx8kw6p096XBVp7H2gnONZLMX+4uDgwue/ budchris@delta"

ssh_authorized_keys:
  - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFtQcMtGB55jBNuxxvlKXfeYLhy0wsPtIVt2KorpgXhQ budchris@alpha"
  - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFm804g6IUQO1ELH716hLjTBj3zzzbuOUbL3jCE7Gej8 budchris@bravo"
  - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINNTDemhkFYx8kw6p096XBVp7H2gnONZLMX+4uDgwue/ budchris@delta"

package_update: true
package_upgrade: true

packages:
  - zsh
  - tmux
  - neovim
  - docker.io
  - docker-compose
  - curl
  - fzf
  - gawk
  - gcc
  - gnupg
  - sed
  - tar
  - htop
  - jq
  - lsof
  - mc
  - nodejs
  - yarn
  - ripgrep
  - rsync
  - stow
  - tokei
  - tree
  - uuid-runtime
  - wget
  - unzip
  - vim
  - zip
  - git
  - python3-pip

runcmd:
  - chsh -s /usr/bin/zsh player1
  - su - player1 -c 'sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended'
  # Include additional installation commands here (see next step)  
  # Install kind
  - curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
  - chmod +x ./kind
  - mv ./kind /usr/local/bin/kind

  # Install fastfetch
  - apt-get install -y cmake gcc libpci-dev
  - git clone --depth=1 https://github.com/LinusDierheimer/fastfetch.git
  - cd fastfetch
  - mkdir build && cd build
  - cmake ..
  - make -j$(nproc)
  - make install
  - cd ../../ && rm -rf fastfetch

  # Install lazygit
  - LAZYGIT_VERSION=$(curl -s https://api.github.com/repos/jesseduffield/lazygit/releases/latest | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
  - curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/download/v${LAZYGIT_VERSION}/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
  - tar xf lazygit.tar.gz lazygit
  - mv lazygit /usr/local/bin
  - rm lazygit.tar.gz

  # Install just
  - curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/local/bin

  # Install 1Password CLI
  - curl -sS https://downloads.1password.com/linux/keys/1password.asc | apt-key add -
  - echo 'deb [arch=amd64] https://downloads.1password.com/linux/debian/amd64 stable main' > /etc/apt/sources.list.d/1password.list
  - apt update && apt install -y 1password-cli

  # Install Bitwarden CLI
  - curl -Lo bw.zip https://github.com/bitwarden/cli/releases/download/v1.19.0/bw-linux-1.19.0.zip
  - unzip bw.zip -d /usr/local/bin
  - rm bw.zip

  # Install GitHub CLI
  - curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
  - chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
  - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" > /etc/apt/sources.list.d/github-cli.list
  - apt update && apt install -y gh

  # Install Anaconda
  - su - player1 -c 'wget https://repo.anaconda.com/archive/Anaconda3-2023.07-Linux-x86_64.sh -O anaconda.sh'
  - su - player1 -c 'bash anaconda.sh -b -p $HOME/anaconda3'
  - su - player1 -c 'echo "export PATH=\$HOME/anaconda3/bin:\$PATH" >> $HOME/.zshrc'

  # Install Nerd Font JetBrains Mono
  - su - player1 -c 'mkdir -p ~/.local/share/fonts'
  - su - player1 -c 'wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.3.3/JetBrainsMono.zip -O JetBrainsMono.zip'
  - su - player1 -c 'unzip JetBrainsMono.zip -d ~/.local/share/fonts'
  - su - player1 -c 'fc-cache -fv'

  # Install GCP CLI
  - echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" > /etc/apt/sources.list.d/google-cloud-sdk.list
  - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
  - apt update && apt install -y google-cloud-sdk

  # Install Azure CLI
  - curl -sL https://aka.ms/InstallAzureCLIDeb | bash

  # Install AWS CLI
  - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  - unzip awscliv2.zip
  - ./aws/install
  - rm -rf aws awscliv2.zip

  # Install DigitalOcean doctl
  - curl -sL https://github.com/digitalocean/doctl/releases/download/v1.97.0/doctl-1.97.0-linux-amd64.tar.gz | tar -xzv -C /usr/local/bin

  # Install Terraform
  - curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
  - apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
  - apt-get update && apt-get install -y terraform

  # Install Starship prompt
  - curl -fsSL https://starship.rs/install.sh | sh -s -- -y
  - mkdir -p /home/player1/.config
  - echo 'eval "$(starship init zsh)"' >> /home/player1/.zshrc
  - echo 'eval "$(starship init bash)"' >> /home/player1/.bashrc
  - cp starship.toml /home/player1/.config/starship.toml
  - chown player1:player1 /home/player1/.config/starship.toml

  # Create update script
  - echo '#!/bin/bash' > /usr/local/bin/update-system.sh
  - echo 'apt-get update && apt-get upgrade -y' >> /usr/local/bin/update-system.sh
  - echo 'snap refresh' >> /usr/local/bin/update-system.sh
  - echo 'echo "System and applications are up to date."' >> /usr/local/bin/update-system.sh
  - chmod +x /usr/local/bin/update-system.sh

